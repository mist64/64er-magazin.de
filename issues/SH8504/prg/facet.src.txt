

;facet.src.prg ; facet - draw shaded triangular facets
; and straight lines.
;
; richard l. rylander   11/4/84
;
; load "arith.hex" and "graph.hex"
; before using
;
origin = $c26f
ram    = $034a
;
xplt   = $033f
yplt   = $0341
norm   = $c224
noscal = $0347
plot   = $c143
unplot = $c146
;
mlpcnd = $ac
mlpler = $ad
prod   = $ae
mult   = $c011
;
dvdnd  = $fd
dvsor  = $fb
quot   = $fd
divide = $c025
;
      *=ram
;
xmin   *=*+2
ymin   *=*+1
xmid   *=*+2
ymid   *=*+1
xmax   *=*+2
ymax   *=*+1
ytop   *=*+1
ybot   *=*+1
ybase  *=*+1
dltax1 *=*+2
dltax2 *=*+1
dltax3 *=*+1
deltax *=*+1
dltay1 *=*+1
dltay2 *=*+1
dltay3 *=*+1
deltay *=*+1
xdiff  *=*+1
flag1  *=*+1
flag2  *=*+1
flag3  *=*+1
flag   *=*+1
edges  *=*+1
error  *=*+2
mode   *=*+1
count  *=*+2
;
;
      *=origin
;
;*****************************************
;
; scale all y coordinates from 0..239
; psuedo-coordinate range to 0..199
; true screen coordinate range
;
scale  ldy #6
       lda #$d5
       sta mlpcnd
sclp   lda ymin,y
       sta mlpler
       jsr mult
       sta ymin,y
       dey
       dey
       dey
       bpl sclp
       rts
;
;
;*****************************************
;
; exchange 'min' and 'mid' coordinates
;
swap12 ldy #2
loop1  lda xmin,y
       pha
       lda xmid,y
       sta xmin,y
       pla
       sta xmid,y
       dey
       bpl loop1
       rts
;
;*****************************************
;
; exchange 'mid' and 'max' coordinates
;
swap23 ldy #2
loop2  lda xmid,y
       pha
       lda xmax,y
       sta xmid,y
       pla
       sta xmax,y
       dey
       bpl loop2
       rts
;
;*****************************************
;
; sort coordinates according to x components
;
sortx  ldx #2
sortlp sec
       lda xmid
       sbc xmin
       lda xmid+1
       sbc xmin+1
       bcs noswp1
       jsr swap12
noswp1 dex
       beq sorted
       sec
       lda xmax
       sbc xmid
       lda xmax+1
       sbc xmid+1
       bcs sortlp
       jsr swap23
       jmp sortlp
sorted rts
;
;*****************************************
;
; draw a line between xmin,ymin and xmid,ymid
; using fast dda (digital differential analyzer)
; technique
;
line   lda #2        ; ensure xmax is
       sta xmax+1    ; largest before
       jsr sortx     ; ordering 'min' and 'mid'
       lda noscal
       beq outln
       jsr scale
outln  jsr findxy    ; entry point to
       lda xmin       ; outline facets
       sta xplt
       lda xmin+1
       sta xplt+1
       lda ymin
       sta yplt
       lda dltax1+1  ; check for dx>dy
       bne stepx
       sec
       lda dltax1
       sbc dltay1
       bcs stepx
stepy  lda dltay1
       sta error
       sta count
       lsr error
       sec
       lda dltax1
       sbc error
       sta error
       lda dltax1+1
       sbc #0
       sta error+1
       inc count
lnlp1  lda mode      ; 0 = draw, 1 = erase
       bne erase1
       jsr plot
       jmp sk1
erase1 jsr unplot
sk1    lda flag1     ; 0 = positive slope
       bne nslope
       inc yplt
       bne sk2     ; always branch
nslope dec yplt
sk2    bit error+1
       bmi sk3
       inc xplt
       bne noinc1
       inc xplt+1
noinc1 sec
       lda error
       sbc dltay1
       sta error
       lda error+1
       sbc #0
       sta error+1
sk3    clc
       lda error
       adc dltax1
       sta error
       lda error+1
       adc dltax1+1
       sta error+1
       dec count
       bne lnlp1
       rts
;
stepx  lda dltax1
       sta error
       sta count
       lda dltax1+1
       sta error+1
       sta count+1
       lsr error+1
       ror error
       sec
       lda dltay1
       sbc error
       sta error
       lda #0
       sbc error+1
       sta error+1
lnlp2  lda mode
       bne erase2
       jsr plot
       jmp skp1
erase2 jsr unplot
skp1   inc xplt
       bne noinc2
       inc xplt+1
noinc2 bit error+1
       bmi skp3
       lda flag1
       bne ngslp
       inc yplt
       bne skp2    ; always branch
ngslp  dec yplt
skp2   sec
       lda error
       sbc dltax1
       sta error
       lda error+1
       sbc dltax1+1
       sta error+1
skp3   clc
       lda error
       adc dltay1
       sta error
       lda error+1
       adc #0
       sta error+1
       sec
       lda count
       sbc #1
       sta count
       bcs test
       dec count+1
test   bit count+1
       bpl lnlp2
       rts
;
;*****************************************
; draw a shaded vertical line at
; xplt from ytop to ybot
;
vline  sec         ; make sure ytop>ybot
       lda ytop
       sbc ybot
       bcs draw
       lda ytop
       pha
       lda ybot
       sta ytop
       pla
       sta ybot
draw   lda ytop
       sta yplt
       jsr norm    ; plot a shade-weighted
       lda ytop    ; pixel checking only
       cmp ybot    ; for shade style
       beq done
       dec ytop
       jmp draw
done   rts
;
;*****************************************
;
; find endpoints for vertical lines
; between facet edges
;
endpts lda xdiff
       sta mlpcnd
       lda deltay
       sta mlpler
       jsr mult
       sta dvdnd+1
       lda prod
       sta dvdnd
       lda #0
       sta dvsor+1
       lda deltax
       sta dvsor
       jsr divide
       lda flag
       bne negslp
       clc
       lda ybase
       adc quot
       bcc skip2
negslp sec
       lda ybase
       sbc quot
skip2  rts
;
;*****************************************
;
; find coordinate differences
;
; all "delta x" values positive,
; single precision (just lower byte)
;
findxy sec
       lda xmid
       sbc xmin
       sta dltax1
       lda xmid+1
       sbc xmin+1
       sta dltax1+1
       sec
       lda xmax
       sbc xmid
       sta dltax2
       sec
       lda xmax
       sbc xmin
       sta dltax3
;
; use abs(delta y) values,
; flags indicate slope of limit lines
;
       lda #$00
       sta flag1
       sta flag2
       sta flag3
       sec
       lda ymid
       sbc ymin
       bcs store1
       inc flag1
       lda ymin
       sbc ymid
store1 sta dltay1
       sec
       lda ymax
       sbc ymid
       bcs store2
       inc flag2
       lda ymid
       sbc ymax
store2 sta dltay2
       sec
       lda ymax
       sbc ymin
       bcs store3
       inc flag3
       lda ymin
       sbc ymax
store3 sta dltay3
       rts
;
;*****************************************
;
; draw a shaded triangular facet
;
facet  jsr sortx
       lda noscal
       beq ysok
       jsr scale
ysok   jsr findxy
       lda xmin
       sta xplt
       lda xmin+1
       sta xplt+1
fcetlp sec
       lda xplt
       sbc xmin
       sta xdiff
       lda dltax1
       beq cont
       sta deltax
       lda dltay1
       sta deltay
       lda flag1
       sta flag
       lda ymin
       sta ybase
       jsr endpts
       sta ytop
       lda dltax3
       beq cont
       sta deltax
       lda dltay3
       sta deltay
       lda flag3
       sta flag
       jsr endpts
       sta ybot
       jsr vline
       lda xplt+1
       cmp xmid+1
       bne nextx1
       lda xplt
       cmp xmid
       beq cont
nextx1 inc xplt
       bne skip3
       inc xplt+1
skip3  jmp fcetlp
cont   sec
       lda xplt
       sbc xmin
       sta xdiff
       lda dltax3
       beq fini
       sta deltax
       lda dltay3
       sta deltay
       lda flag3
       sta flag
       lda ymin
       sta ybase
       jsr endpts
       sta ybot
       sec
       lda xplt
       sbc xmid
       sta xdiff
       lda dltax2
       beq fini
       sta deltax
       lda dltay2
       sta deltay
       lda flag2
       sta flag
       lda ymid
       sta ybase
       jsr endpts
       sta ytop
       jsr vline
       lda xplt+1
       cmp xmax+1
       bne nextx2
       lda xplt
       cmp xmax
       beq fini
nextx2 inc xplt
       bne skip4
       inc xplt+1
skip4  jmp cont
fini   lda edges
       beq finish
       jsr outln
       jsr swap23
       jsr outln
       jsr swap12
       jsr swap23
       jsr swap12
       jsr outln
finish rts
.end

